@model ToDoList.Models.Tasks

@{
    ViewData["Title"] = "AddTask";
}

        <h4 class="addTask-header">Tasks</h4>
<div class="addTask">
        <form class="addTask-form" asp-action="Add">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
			<div class="attribute-task">
                <label asp-for="Name" class="control-label">@Html.NameFor(model => model.Name):</label>
                <input asp-for="Name" class="form-control" />
			</div>
            <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
            <div class="attribute-task">
                <label asp-for="Description" class="control-label">@Html.NameFor(model => model.Description):</label>
                <input asp-for="Description" class="form-control" />
            </div>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
            <div class="attribute-task">
                <label asp-for="dateCreate" class="control-label">@Html.NameFor(model => model.dateCreate):</label>
                <input asp-for="dateCreate" type="date" class="form-control" />
            </div>
                <span asp-validation-for="dateCreate" class="text-danger"></span>
            </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                @Html.DisplayNameFor(model => model.IsCompleted) <input class="form-check-input" asp-for="IsCompleted" />
            </label>
        </div>
            <div class="btn-wrapper form-group">
                <a class="link-to-home" asp-controller="Home" asp-action="Index">Back to Main</a>
            <input type="submit" value="Create" class="btn-add-task btn btn-primary" />
            </div>
        </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
